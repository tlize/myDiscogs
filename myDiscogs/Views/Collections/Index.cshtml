@model myDiscogs.Models.Collection.PaginatedCollection

@{
    ViewBag.Title = "Index";
}

<h2>@Model.Pagination.Items items in collection</h2>
<p>page @Model.Pagination.Page of @Model.Pagination.Pages</p>

@*<p>
        @Html.ActionLink("Create New", "Create")
</p>*@

@{
    var totalPages = Model.Pagination.Pages;
    var currentPage = Model.Pagination.Page;
}


<table class="table">
    <tr>
        <th></th>
        <th>
            Artist
        </th>
        <th>
            Title
        </th>
        <th>
            Format
        </th>
        <th>
            Label
        </th>
        <th>
            CatNo
        </th>
        <th>
            Year
        </th>
        <th>
            Genre
        </th>
        <th>
            Style
        </th>
        <th>
            Added
        </th>
        @*<th></th>*@
    </tr>

    @foreach (var item in Model.Releases)
    {
        var releaseArtist = item.BasicInformation.Artists[0].Name.Replace(" ", "-");
        var releaseTitle = item.BasicInformation.Title.Replace(" ", "-");
        var releaseId = item.BasicInformation.Id;
        var releasePage = "https://www.discogs.com/release/" + releaseId + "-" + releaseArtist + "-" + releaseTitle;

        var format = item.BasicInformation.Formats[0].Name;
        foreach (var description in item.BasicInformation.Formats[0].Descriptions)
        {
            format += ", " + description;
        }

        var year = item.BasicInformation.Year.ToString() == "0" ? "N/A" : item.BasicInformation.Year.ToString();

        var genres = "N/A";
        if (item.BasicInformation.Genres.Count > 0)
        {
            genres = item.BasicInformation.Genres[0];
            for (int i = 1; i < item.BasicInformation.Genres.Count; i++)
            {
                genres += ", " + item.BasicInformation.Genres[i];
            }
        }

        var styles = "N/A";
        if (item.BasicInformation.Styles.Count > 0)
        {
            styles = item.BasicInformation.Styles[0];
            for (int i = 1; i < item.BasicInformation.Styles.Count; i++)
            {
                styles += ", " + item.BasicInformation.Styles[i];
            }
        }

        <tr>
            <td>
                <a href="@releasePage" target="_blank" title="Discogs Release Page"><img src="@item.BasicInformation.Thumb" alt="@item.BasicInformation.Title"></a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BasicInformation.Artists[0].Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BasicInformation.Title)
            </td>
            <td>
                @format
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BasicInformation.Labels[0].Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BasicInformation.Labels[0].Catno)
            </td>
            <td>
                @year
            </td>
            <td>
                @genres
            </td>
            <td>
                @styles
            </td>
            <td>
                @item.DateAdded.ToString().Substring(0, 10)
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>*@
        </tr>
    }

</table>

<ul class="pagination">
    @if (totalPages > 1)
    {
        if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">Previous  </a>
            </li>
        }

        for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i     </a>
            </li>
        }

        if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Next</a>
            </li>
        }
    }
</ul>